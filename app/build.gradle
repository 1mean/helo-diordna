plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
}

android {
    compileSdkVersion 31
    defaultConfig {
        applicationId "com.example.hello_diordna"
        minSdkVersion 21
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    //使用viewbinding取代kotlin-android-extensions插件
    buildFeatures {
        viewBinding true
    }

    //升级到jdk11，解决编译时报错Execution failed for task ':app:lintDebug'
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //noinspection GradleDependency
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    //使用Activity Result API 必须最低appconpat1.3.0以上
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation project(path: ':helo_base')

    //viewpager2的申明不能写在依赖的module里，必须在当前的module
    implementation 'androidx.viewpager2:viewpager2:1.0.0'
    // ViewPager 2 需要使用 RecycleView 的 adapter
    implementation 'androidx.recyclerview:recyclerview:1.2.0'
    implementation 'com.blankj:utilcodex:1.30.6'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    // androidx 下的 material design,即以前的design包
    implementation "com.google.android.material:material:1.3.0"

    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'
    implementation 'jp.wasabeef:glide-transformations:4.3.0'

    implementation 'com.squareup.retrofit2:retrofit:2.9.0'

    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'
    implementation 'io.reactivex.rxjava3:rxjava:3.0.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava3:2.9.0'


    //Room数据库
    def room_version = "2.3.0"
    implementation("androidx.room:room-runtime:$room_version")
    kapt("androidx.room:room-compiler:$room_version")
    // 为 Room 添加 RxJava3 支持
    implementation "androidx.room:room-rxjava3:$room_version"

    //google下拉刷新
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'

    //google视频播放
    implementation 'com.google.android.exoplayer:exoplayer-core:2.16.1'
    implementation 'com.google.android.exoplayer:exoplayer-dash:2.16.1'
    implementation 'com.google.android.exoplayer:exoplayer-ui:2.16.1'

    implementation 'com.readystatesoftware.systembartint:systembartint:1.0.3'

    var lifecycle_version = "2.4.0"
    var arch_version = "2.1.0"
    // ViewModel
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version")
    // ViewModel utilities for Compose
    implementation("androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version")
    // LiveData
    implementation("androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version")
    // Lifecycles only (without ViewModel or LiveData)
    implementation("androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version")
    // Saved state module for ViewModel
    implementation("androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version")
    // Annotation processor,添加 apply plugin: 'kotlin-kapt'
    kapt("androidx.lifecycle:lifecycle-compiler:$lifecycle_version")
    // optional - helpers for implementing LifecycleOwner in a Service
    implementation("androidx.lifecycle:lifecycle-service:$lifecycle_version")
    // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
    implementation("androidx.lifecycle:lifecycle-process:$lifecycle_version")
    // optional - ReactiveStreams support for LiveData
    implementation("androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle_version")
}
